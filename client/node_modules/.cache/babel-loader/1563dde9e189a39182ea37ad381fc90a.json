{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrea\\\\Documents\\\\Key-Saver\\\\client\\\\src\\\\components\\\\AccountCard.jsx\";\nimport * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport { red } from '@mui/material/colors';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { Component } from 'react';\nimport { Divider, Grid, InputAdornment } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport { TramRounded, Visibility, VisibilityOff } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AccountCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibility: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 240,\n          minWidth: 240\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: red[500]\n            },\n            \"aria-label\": \"recipe\",\n            children: this.props.firstchar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this),\n          action: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"settings\",\n            children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this),\n          title: this.props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-read-only-input\",\n            size: \"small\",\n            type: visibility ? \"text\" : \"password\",\n            value: this.props.username,\n            InputProps: {\n              readOnly: true\n            },\n            variant: \"outlined\",\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: () => this.setState({\n                  visibility: TramRounded\n                }),\n                edge: \"end\",\n                children: visibility ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 35\n                }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 55\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-read-only-input\",\n            size: \"small\",\n            type: \"password\",\n            value: \"andrea\",\n            InputProps: {\n              readOnly: true\n            },\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          disableSpacing: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"add to favorites\",\n            title: \"copy\",\n            children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Card","CardHeader","CardContent","CardActions","Avatar","IconButton","red","MoreVertIcon","ContentCopyIcon","Component","Divider","Grid","InputAdornment","TextField","TramRounded","Visibility","VisibilityOff","AccountCard","constructor","props","state","visibility","render","maxWidth","minWidth","bgcolor","firstchar","title","username","readOnly","setState"],"sources":["C:/Users/Andrea/Documents/Key-Saver/client/src/components/AccountCard.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { red } from '@mui/material/colors';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport { Component } from 'react';\r\nimport { Divider, Grid, InputAdornment } from '@mui/material';\r\nimport TextField from '@mui/material/TextField';\r\nimport { TramRounded, Visibility, VisibilityOff } from '@mui/icons-material';\r\n\r\nexport default class AccountCard extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visibility: false\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <Grid item xs=\"auto\">\r\n        <Card sx={{ maxWidth: 240, minWidth: 240 }}>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                {this.props.firstchar}\r\n              </Avatar>\r\n            }\r\n            action={\r\n              <IconButton aria-label=\"settings\">\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            }\r\n            title={this.props.title}\r\n          />\r\n          <CardContent>\r\n            <Divider/>\r\n            <TextField\r\n              id=\"filled-read-only-input\"\r\n              size=\"small\"\r\n              type={visibility ? \"text\" : \"password\"}\r\n              value={this.props.username}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n              variant=\"outlined\"\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => this.setState({visibility : TramRounded})}\r\n                    edge=\"end\"\r\n                  >\r\n                    {visibility ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n            <TextField\r\n              id=\"filled-read-only-input\"\r\n              size=\"small\"\r\n              type=\"password\"\r\n              value=\"andrea\"\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </CardContent>\r\n          <CardActions disableSpacing>\r\n            <IconButton aria-label=\"add to favorites\" title=\"copy\">\r\n              <ContentCopyIcon />\r\n            </IconButton>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}